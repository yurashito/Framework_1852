-> apache :  tomcat9
->importer le fichier .jar dans le projet
-> chaque methode dans la classe doit etre annote meme les getters/setters 
ex "/select" -> n'oublie pas le "/"

-> faire retourne les fonction en modelView pour afficher les fichiers.jsp
exemple de code : 
    public ModelView findAll1() throws Exception{
        ModelView view = new ModelView();
        view.setData(new HashMap<String , Object>());
        view.setView("../test.jsp");
        List<String> liste= new ArrayList<String>();        
        liste.add(this.Id+"");
        liste.add(this.Nom+"");
        view.addItem("liste" , liste);
        return view;
    }

explication : 
view.setData c'est pour envoyer des donnees 
view.setView("../test.jsp")  pour afficher "test.jsp"
==> n'oublier pas de mettre "../" 
==> apres ca vous pouvez le lien du fichier.jsp , a partir du dossier "WEB-INF/"  , que vous voulez afficher 



        


-> mettre dans le web.xml :
<?xml version="1.0" encoding="UTF-8"?>
<web-app >
    <servlet>
        <servlet-name>Test</servlet-name>
        <servlet-class>etu1852.framework.servlet.FrontServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>Test</servlet-name>
        <url-pattern>/TestFramework/*</url-pattern>
    </servlet-mapping>
</web-app>


-> pour accede a des aux models/classes
url doit etre de la forme:
"TestFramework/"+value_de_l_annotation_du_methode(2)
exemple : "TestFramework/emp-all" 
==> TestFramework doit correspondre au url-pattern 
==> si vous modifier l'url-pattern alors vous devez aussi modifier (2) 



-> pour le formulaire :
les "name" des input doivent etre egaux aux noms des attributs du class